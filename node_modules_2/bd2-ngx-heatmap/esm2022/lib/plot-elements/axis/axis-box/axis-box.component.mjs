import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./x-axis/num-x-axis.component";
import * as i3 from "./y-axis/y-axis.component";
export class AxisBoxComponent {
    constructor() {
    }
    ngOnInit() {
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: AxisBoxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: AxisBoxComponent, selector: "[bd2hm-axis-box]", inputs: { graphic: "graphic" }, ngImport: i0, template: `
    <svg:g *ngIf="graphic" class="bd2hm-axisWrapper">
      <g bd2hm-num-x-axis class="xTopAxis" [top]="true" [xScale]="graphic.xScale"
         [yPosition]="0" [xDomain]="graphic.xDomain"></g>
      <g bd2hm-num-x-axis class="xBottomAxis" [top]="false" [xScale]="graphic.xScale"
         [yPosition]="graphic.workspaceHeight" [xDomain]="graphic.xDomain"></g>

      <g bd2hm-y-axis class="yLeftAxis" [left]="true" [yScale]="graphic.yScale" [xPosition]="0"></g>
      <g bd2hm-y-axis class="yRightAxis" [left]="false" [yScale]="graphic.yScale" [xPosition]="graphic.workspaceWidth"></g>
    </svg:g>
  `, isInline: true, dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.NumXAxisComponent, selector: "[bd2hm-num-x-axis]", inputs: ["xScale", "xDomain", "yPosition", "top"] }, { kind: "component", type: i3.YAxisComponent, selector: "[bd2hm-y-axis]", inputs: ["yScale", "xPosition", "left"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: AxisBoxComponent, decorators: [{
            type: Component,
            args: [{ selector: '[bd2hm-axis-box]', template: `
    <svg:g *ngIf="graphic" class="bd2hm-axisWrapper">
      <g bd2hm-num-x-axis class="xTopAxis" [top]="true" [xScale]="graphic.xScale"
         [yPosition]="0" [xDomain]="graphic.xDomain"></g>
      <g bd2hm-num-x-axis class="xBottomAxis" [top]="false" [xScale]="graphic.xScale"
         [yPosition]="graphic.workspaceHeight" [xDomain]="graphic.xDomain"></g>

      <g bd2hm-y-axis class="yLeftAxis" [left]="true" [yScale]="graphic.yScale" [xPosition]="0"></g>
      <g bd2hm-y-axis class="yRightAxis" [left]="false" [yScale]="graphic.yScale" [xPosition]="graphic.workspaceWidth"></g>
    </svg:g>
  `, changeDetection: ChangeDetectionStrategy.OnPush }]
        }], ctorParameters: function () { return []; }, propDecorators: { graphic: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXhpcy1ib3guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYmQyLW5neC1oZWF0bWFwL3NyYy9saWIvcGxvdC1lbGVtZW50cy9heGlzL2F4aXMtYm94L2F4aXMtYm94LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBUyxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFtQmhGLE1BQU0sT0FBTyxnQkFBZ0I7SUFLM0I7SUFDQSxDQUFDO0lBRUQsUUFBUTtJQUNSLENBQUM7K0dBVFUsZ0JBQWdCO21HQUFoQixnQkFBZ0Isd0ZBZGpCOzs7Ozs7Ozs7O0dBVVQ7OzRGQUlVLGdCQUFnQjtrQkFoQjVCLFNBQVM7K0JBQ0Usa0JBQWtCLFlBQ2xCOzs7Ozs7Ozs7O0dBVVQsbUJBRWdCLHVCQUF1QixDQUFDLE1BQU07MEVBSy9DLE9BQU87c0JBRE4sS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7R3JhcGhpY0NvbnRleHR9IGZyb20gJy4uLy4uLy4uL2JkMi1oZWF0bWFwLmRvbSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ1tiZDJobS1heGlzLWJveF0nLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8c3ZnOmcgKm5nSWY9XCJncmFwaGljXCIgY2xhc3M9XCJiZDJobS1heGlzV3JhcHBlclwiPlxyXG4gICAgICA8ZyBiZDJobS1udW0teC1heGlzIGNsYXNzPVwieFRvcEF4aXNcIiBbdG9wXT1cInRydWVcIiBbeFNjYWxlXT1cImdyYXBoaWMueFNjYWxlXCJcclxuICAgICAgICAgW3lQb3NpdGlvbl09XCIwXCIgW3hEb21haW5dPVwiZ3JhcGhpYy54RG9tYWluXCI+PC9nPlxyXG4gICAgICA8ZyBiZDJobS1udW0teC1heGlzIGNsYXNzPVwieEJvdHRvbUF4aXNcIiBbdG9wXT1cImZhbHNlXCIgW3hTY2FsZV09XCJncmFwaGljLnhTY2FsZVwiXHJcbiAgICAgICAgIFt5UG9zaXRpb25dPVwiZ3JhcGhpYy53b3Jrc3BhY2VIZWlnaHRcIiBbeERvbWFpbl09XCJncmFwaGljLnhEb21haW5cIj48L2c+XHJcblxyXG4gICAgICA8ZyBiZDJobS15LWF4aXMgY2xhc3M9XCJ5TGVmdEF4aXNcIiBbbGVmdF09XCJ0cnVlXCIgW3lTY2FsZV09XCJncmFwaGljLnlTY2FsZVwiIFt4UG9zaXRpb25dPVwiMFwiPjwvZz5cclxuICAgICAgPGcgYmQyaG0teS1heGlzIGNsYXNzPVwieVJpZ2h0QXhpc1wiIFtsZWZ0XT1cImZhbHNlXCIgW3lTY2FsZV09XCJncmFwaGljLnlTY2FsZVwiIFt4UG9zaXRpb25dPVwiZ3JhcGhpYy53b3Jrc3BhY2VXaWR0aFwiPjwvZz5cclxuICAgIDwvc3ZnOmc+XHJcbiAgYCxcclxuICBzdHlsZXM6IFtdLFxyXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBeGlzQm94Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgQElucHV0KClcclxuICBncmFwaGljOiBHcmFwaGljQ29udGV4dDtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICB9XHJcblxyXG5cclxufVxyXG4iXX0=