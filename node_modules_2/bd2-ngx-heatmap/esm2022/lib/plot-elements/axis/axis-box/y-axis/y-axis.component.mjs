import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
export class YAxisComponent {
    constructor() {
        this.left = false;
    }
    ngOnInit() {
    }
    ngOnChanges(changes) {
        this.axisTransform = `translate(${this.xPosition},0)`;
        this.y2 = this.yScale?.range()[1];
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: YAxisComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: YAxisComponent, selector: "[bd2hm-y-axis]", inputs: { yScale: "yScale", xPosition: "xPosition", left: "left" }, usesOnChanges: true, ngImport: i0, template: `
    <svg:g class="bd2hm-y-axis" [attr.transform]="axisTransform">
      <svg:line x1="0" y1="0" x2="0" [attr.y2]="y2"></svg:line>
    </svg:g>
  `, isInline: true, changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: YAxisComponent, decorators: [{
            type: Component,
            args: [{ selector: '[bd2hm-y-axis]', template: `
    <svg:g class="bd2hm-y-axis" [attr.transform]="axisTransform">
      <svg:line x1="0" y1="0" x2="0" [attr.y2]="y2"></svg:line>
    </svg:g>
  `, changeDetection: ChangeDetectionStrategy.OnPush }]
        }], ctorParameters: function () { return []; }, propDecorators: { yScale: [{
                type: Input
            }], xPosition: [{
                type: Input
            }], left: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoieS1heGlzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2JkMi1uZ3gtaGVhdG1hcC9zcmMvbGliL3Bsb3QtZWxlbWVudHMvYXhpcy9heGlzLWJveC95LWF4aXMveS1heGlzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBbUMsTUFBTSxlQUFlLENBQUM7O0FBYTFHLE1BQU0sT0FBTyxjQUFjO0lBY3pCO1FBTEEsU0FBSSxHQUFHLEtBQUssQ0FBQztJQU1iLENBQUM7SUFFRCxRQUFRO0lBQ1IsQ0FBQztJQUVELFdBQVcsQ0FBQyxPQUFzQjtRQUVoQyxJQUFJLENBQUMsYUFBYSxHQUFHLGFBQWEsSUFBSSxDQUFDLFNBQVMsS0FBSyxDQUFDO1FBQ3RELElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUNwQyxDQUFDOytHQXhCVSxjQUFjO21HQUFkLGNBQWMsK0lBUmY7Ozs7R0FJVDs7NEZBSVUsY0FBYztrQkFWMUIsU0FBUzsrQkFDRSxnQkFBZ0IsWUFDaEI7Ozs7R0FJVCxtQkFFZ0IsdUJBQXVCLENBQUMsTUFBTTswRUFLL0MsTUFBTTtzQkFETCxLQUFLO2dCQUlOLFNBQVM7c0JBRFIsS0FBSztnQkFJTixJQUFJO3NCQURILEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgU2ltcGxlQ2hhbmdlc30gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7U2NhbGVCYW5kfSBmcm9tICdkMy1zY2FsZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ1tiZDJobS15LWF4aXNdJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPHN2ZzpnIGNsYXNzPVwiYmQyaG0teS1heGlzXCIgW2F0dHIudHJhbnNmb3JtXT1cImF4aXNUcmFuc2Zvcm1cIj5cclxuICAgICAgPHN2ZzpsaW5lIHgxPVwiMFwiIHkxPVwiMFwiIHgyPVwiMFwiIFthdHRyLnkyXT1cInkyXCI+PC9zdmc6bGluZT5cclxuICAgIDwvc3ZnOmc+XHJcbiAgYCxcclxuICBzdHlsZXM6IFtdLFxyXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBZQXhpc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcclxuXHJcbiAgQElucHV0KClcclxuICB5U2NhbGU6IFNjYWxlQmFuZDxhbnk+O1xyXG5cclxuICBASW5wdXQoKVxyXG4gIHhQb3NpdGlvbjogbnVtYmVyO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGxlZnQgPSBmYWxzZTtcclxuXHJcbiAgYXhpc1RyYW5zZm9ybTogc3RyaW5nO1xyXG4gIHkyOiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcblxyXG4gICAgdGhpcy5heGlzVHJhbnNmb3JtID0gYHRyYW5zbGF0ZSgke3RoaXMueFBvc2l0aW9ufSwwKWA7XHJcbiAgICB0aGlzLnkyID0gdGhpcy55U2NhbGU/LnJhbmdlKClbMV07XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=