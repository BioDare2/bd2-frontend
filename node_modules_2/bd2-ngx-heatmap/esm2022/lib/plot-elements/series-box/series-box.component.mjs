import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./serie-row/serie-row.component";
export class SeriesBoxComponent {
    constructor() {
    }
    trackByIndex(index, item) {
        return index;
    }
    ngOnInit() {
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SeriesBoxComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: SeriesBoxComponent, selector: "[bd2hm-series-box]", inputs: { series: "series", graphic: "graphic" }, ngImport: i0, template: `
    <svg:g *ngFor="let serie of series; trackBy: trackByIndex"
           bd2hm-serie-row [graphic]="graphic" [serie]="serie"></svg:g>
  `, isInline: true, dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: i2.SerieRowComponent, selector: "[bd2hm-serie-row]", inputs: ["graphic", "serie"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SeriesBoxComponent, decorators: [{
            type: Component,
            args: [{ selector: '[bd2hm-series-box]', template: `
    <svg:g *ngFor="let serie of series; trackBy: trackByIndex"
           bd2hm-serie-row [graphic]="graphic" [serie]="serie"></svg:g>
  `, changeDetection: ChangeDetectionStrategy.OnPush }]
        }], ctorParameters: function () { return []; }, propDecorators: { series: [{
                type: Input
            }], graphic: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyaWVzLWJveC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9iZDItbmd4LWhlYXRtYXAvc3JjL2xpYi9wbG90LWVsZW1lbnRzL3Nlcmllcy1ib3gvc2VyaWVzLWJveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQVMsTUFBTSxlQUFlLENBQUM7Ozs7QUFZaEYsTUFBTSxPQUFPLGtCQUFrQjtJQVE3QjtJQUNBLENBQUM7SUFFRCxZQUFZLENBQUMsS0FBYSxFQUFFLElBQVM7UUFDbkMsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRUQsUUFBUTtJQUNSLENBQUM7K0dBaEJVLGtCQUFrQjttR0FBbEIsa0JBQWtCLDRHQVBuQjs7O0dBR1Q7OzRGQUlVLGtCQUFrQjtrQkFUOUIsU0FBUzsrQkFDRSxvQkFBb0IsWUFDcEI7OztHQUdULG1CQUVnQix1QkFBdUIsQ0FBQyxNQUFNOzBFQUsvQyxNQUFNO3NCQURMLEtBQUs7Z0JBSU4sT0FBTztzQkFETixLQUFLIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0fSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtCb3hTZXJpZSwgR3JhcGhpY0NvbnRleHR9IGZyb20gJy4uLy4uL2JkMi1oZWF0bWFwLmRvbSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ1tiZDJobS1zZXJpZXMtYm94XScsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxzdmc6ZyAqbmdGb3I9XCJsZXQgc2VyaWUgb2Ygc2VyaWVzOyB0cmFja0J5OiB0cmFja0J5SW5kZXhcIlxyXG4gICAgICAgICAgIGJkMmhtLXNlcmllLXJvdyBbZ3JhcGhpY109XCJncmFwaGljXCIgW3NlcmllXT1cInNlcmllXCI+PC9zdmc6Zz5cclxuICBgLFxyXG4gIHN0eWxlczogW10sXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2hcclxufSlcclxuZXhwb3J0IGNsYXNzIFNlcmllc0JveENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgc2VyaWVzOiBCb3hTZXJpZVtdO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGdyYXBoaWM6IEdyYXBoaWNDb250ZXh0O1xyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICB9XHJcblxyXG4gIHRyYWNrQnlJbmRleChpbmRleDogbnVtYmVyLCBpdGVtOiBhbnkpIHtcclxuICAgIHJldHVybiBpbmRleDtcclxuICB9XHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gIH1cclxuXHJcblxyXG59XHJcbiJdfQ==