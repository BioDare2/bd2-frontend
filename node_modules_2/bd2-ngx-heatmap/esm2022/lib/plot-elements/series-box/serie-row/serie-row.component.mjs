import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "./data-point-box/data-point-box.component";
export class SerieRowComponent {
    constructor() {
    }
    trackByIndex(index, item) {
        return index;
    }
    ngOnInit() {
    }
    ngOnChanges(changes) {
        if (this.graphic && this.serie) {
            this.yPosition = this.graphic.yScale(this.serie.key);
            this.yHeight = this.graphic.yScale.bandwidth();
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SerieRowComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: SerieRowComponent, selector: "[bd2hm-serie-row]", inputs: { graphic: "graphic", serie: "serie" }, usesOnChanges: true, ngImport: i0, template: `
    <svg:g *ngIf="graphic && serie" class="bd2hm-serie">
      <svg:g *ngFor="let point of serie.data; trackBy: trackByIndex" bd2hm-data-point-box
             [point]="point" [xScale]="graphic.xScale"
             [yPosition]="yPosition"
             [yHeight]="yHeight" [colorScale]="graphic.colorScale"
             [label]="serie.label"
      ></svg:g>
    </svg:g>
  `, isInline: true, dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.DataPointBoxComponent, selector: "[bd2hm-data-point-box]", inputs: ["point", "yPosition", "yHeight", "xScale", "colorScale", "label"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: SerieRowComponent, decorators: [{
            type: Component,
            args: [{ selector: '[bd2hm-serie-row]', template: `
    <svg:g *ngIf="graphic && serie" class="bd2hm-serie">
      <svg:g *ngFor="let point of serie.data; trackBy: trackByIndex" bd2hm-data-point-box
             [point]="point" [xScale]="graphic.xScale"
             [yPosition]="yPosition"
             [yHeight]="yHeight" [colorScale]="graphic.colorScale"
             [label]="serie.label"
      ></svg:g>
    </svg:g>
  `, changeDetection: ChangeDetectionStrategy.OnPush }]
        }], ctorParameters: function () { return []; }, propDecorators: { graphic: [{
                type: Input
            }], serie: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyaWUtcm93LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2JkMi1uZ3gtaGVhdG1hcC9zcmMvbGliL3Bsb3QtZWxlbWVudHMvc2VyaWVzLWJveC9zZXJpZS1yb3cvc2VyaWUtcm93LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUMsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBbUMsTUFBTSxlQUFlLENBQUM7Ozs7QUFrQjFHLE1BQU0sT0FBTyxpQkFBaUI7SUFZNUI7SUFDQSxDQUFDO0lBRUQsWUFBWSxDQUFDLEtBQWEsRUFBRSxJQUFTO1FBQ25DLE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQztJQUVELFFBQVE7SUFDUixDQUFDO0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBRWhDLElBQUksSUFBSSxDQUFDLE9BQU8sSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQzlCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNyRCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLFNBQVMsRUFBRSxDQUFDO1NBQ2hEO0lBQ0gsQ0FBQzsrR0E1QlUsaUJBQWlCO21HQUFqQixpQkFBaUIsOEhBYmxCOzs7Ozs7Ozs7R0FTVDs7NEZBSVUsaUJBQWlCO2tCQWY3QixTQUFTOytCQUNFLG1CQUFtQixZQUNuQjs7Ozs7Ozs7O0dBU1QsbUJBRWdCLHVCQUF1QixDQUFDLE1BQU07MEVBSy9DLE9BQU87c0JBRE4sS0FBSztnQkFJTixLQUFLO3NCQURKLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIE9uSW5pdCwgU2ltcGxlQ2hhbmdlc30gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7Qm94U2VyaWUsIEdyYXBoaWNDb250ZXh0fSBmcm9tICcuLi8uLi8uLi9iZDItaGVhdG1hcC5kb20nO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdbYmQyaG0tc2VyaWUtcm93XScsXHJcbiAgdGVtcGxhdGU6IGBcclxuICAgIDxzdmc6ZyAqbmdJZj1cImdyYXBoaWMgJiYgc2VyaWVcIiBjbGFzcz1cImJkMmhtLXNlcmllXCI+XHJcbiAgICAgIDxzdmc6ZyAqbmdGb3I9XCJsZXQgcG9pbnQgb2Ygc2VyaWUuZGF0YTsgdHJhY2tCeTogdHJhY2tCeUluZGV4XCIgYmQyaG0tZGF0YS1wb2ludC1ib3hcclxuICAgICAgICAgICAgIFtwb2ludF09XCJwb2ludFwiIFt4U2NhbGVdPVwiZ3JhcGhpYy54U2NhbGVcIlxyXG4gICAgICAgICAgICAgW3lQb3NpdGlvbl09XCJ5UG9zaXRpb25cIlxyXG4gICAgICAgICAgICAgW3lIZWlnaHRdPVwieUhlaWdodFwiIFtjb2xvclNjYWxlXT1cImdyYXBoaWMuY29sb3JTY2FsZVwiXHJcbiAgICAgICAgICAgICBbbGFiZWxdPVwic2VyaWUubGFiZWxcIlxyXG4gICAgICA+PC9zdmc6Zz5cclxuICAgIDwvc3ZnOmc+XHJcbiAgYCxcclxuICBzdHlsZXM6IFtdLFxyXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTZXJpZVJvd0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcclxuXHJcbiAgQElucHV0KClcclxuICBncmFwaGljOiBHcmFwaGljQ29udGV4dDtcclxuXHJcbiAgQElucHV0KClcclxuICBzZXJpZTogQm94U2VyaWU7XHJcblxyXG4gIHlQb3NpdGlvbjogbnVtYmVyO1xyXG5cclxuICB5SGVpZ2h0OiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge1xyXG4gIH1cclxuXHJcbiAgdHJhY2tCeUluZGV4KGluZGV4OiBudW1iZXIsIGl0ZW06IGFueSkge1xyXG4gICAgcmV0dXJuIGluZGV4O1xyXG4gIH1cclxuXHJcbiAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgfVxyXG5cclxuICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZCB7XHJcblxyXG4gICAgaWYgKHRoaXMuZ3JhcGhpYyAmJiB0aGlzLnNlcmllKSB7XHJcbiAgICAgIHRoaXMueVBvc2l0aW9uID0gdGhpcy5ncmFwaGljLnlTY2FsZSh0aGlzLnNlcmllLmtleSk7XHJcbiAgICAgIHRoaXMueUhlaWdodCA9IHRoaXMuZ3JhcGhpYy55U2NhbGUuYmFuZHdpZHRoKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=