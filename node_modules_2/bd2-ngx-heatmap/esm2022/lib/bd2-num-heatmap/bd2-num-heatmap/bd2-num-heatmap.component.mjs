import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { LookAndFeelSizing } from '../../bd2-heatmap.dom';
import { TooltipService } from '../../plot-elements/tooltip/tooltip.service';
import { HeatmapDataUtil } from '../heatmap-data-util';
import { HeatmapGraphUtil } from '../../heatmap-graph-util';
import * as i0 from "@angular/core";
import * as i1 from "../../plot-elements/tooltip/tooltip.service";
import * as i2 from "@angular/common";
import * as i3 from "../../plot-elements/labels/labels.component";
import * as i4 from "../../plot-elements/tooltip/tooltip.component";
import * as i5 from "../../plot-elements/pane-back/pane-back.component";
import * as i6 from "../../plot-elements/series-box/series-box.component";
import * as i7 from "../../plot-elements/axis/axis-box/axis-box.component";
export class Bd2NumHeatmapComponent {
    constructor(changeDetector, tooltip) {
        this.changeDetector = changeDetector;
        this.tooltip = tooltip;
        this.asymmetric = false;
        this.middleZero = false;
        this.hidden = false;
        this.labelsAlwaysOn = true;
        this.lookAndFeel = new LookAndFeelSizing();
        this.heatmapDataUtil = new HeatmapDataUtil();
        this.heatmapGraphUtil = new HeatmapGraphUtil();
    }
    ngOnInit() {
        // this.changeDetector.detach();
    }
    ngOnDestroy() {
        if (this.tooltip) {
            this.tooltip.ngOnDestroy();
        }
    }
    ngOnChanges(changes) {
        if (this.data && this.data.length > 0) {
            this.series = this.heatmapDataUtil.seriesToBoxes(this.data, this.asymmetric);
            this.graphic = this.heatmapGraphUtil.prepareGraphicContext(this.series, this.lookAndFeel, this.middleZero);
        }
        else {
            this.graphic = undefined;
            this.series = undefined;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: Bd2NumHeatmapComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.TooltipService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.12", type: Bd2NumHeatmapComponent, selector: "bd2-num-heatmap", inputs: { data: "data", asymmetric: "asymmetric", middleZero: "middleZero", hidden: "hidden", labelsAlwaysOn: "labelsAlwaysOn", lookAndFeel: "lookAndFeel" }, providers: [TooltipService], usesOnChanges: true, ngImport: i0, template: "<div class=\"bd2hm-heatmap\" [hidden]=\"hidden\">\r\n  <svg *ngIf=\"graphic\" width=\"100%\" [attr.viewBox]=\"graphic.viewBox\">\r\n    <defs>\r\n      <filter id=\"bd2hm-shadow\">\r\n        <feDropShadow dx=\"1\" dy=\"1\" stdDeviation=\"1\"/>\r\n      </filter>\r\n      <pattern id=\"bd2hm-pattern-diagonal\" width=\"10\" height=\"10\" patternTransform=\"rotate(45 0 0)\"\r\n               patternUnits=\"userSpaceOnUse\">\r\n        <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"10\" style=\"stroke:lightgrey; stroke-width:1\"/>\r\n      </pattern>\r\n    </defs>\r\n\r\n    <g class=\"bd2hm-mainPane\" [attr.transform]=\"graphic.mainPaneTransform\">\r\n\r\n      <g bd2hm-pane-back [graphic]=\"graphic\" class=\"bd2hm-paneBack\"></g>\r\n\r\n\r\n      <g bd2hm-axis-box [graphic]=\"graphic\"></g>\r\n\r\n\r\n\r\n      <g bd2hm-series-box [graphic]=\"graphic\" [series]=\"series\" class=\"bd2hm-seriesBox\"></g>\r\n\r\n\r\n      <g bd2hm-labels [graphic]=\"graphic\" [data]=\"series\" [alwaysOn]=\"labelsAlwaysOn\"></g>\r\n\r\n      <g bd2hm-tooltip [graphic]=\"graphic\"></g>\r\n    </g>\r\n  </svg>\r\n  <!--{{ series | json }}-->\r\n</div>\r\n", styles: ["::ng-deep .bd2hm-paneBack rect{fill:url(#bd2hm-pattern-diagonal)}::ng-deep .bd2hm-axisWrapper line{stroke:gray}::ng-deep .bd2hm-axisWrapper text{fill:gray;text-anchor:middle;font-size:9px}::ng-deep .bd2hm-labels text.bd2hm-onLabel{dominant-baseline:central;fill:#000;opacity:.6}::ng-deep .bd2hm-labels .bd2hm-hover text{dominant-baseline:central;fill:#fff;font-size:10px}::ng-deep .bd2hm-labels .bd2hm-hover rect{fill:#000;opacity:.8;filter:url(#bd2hm-shadow)}::ng-deep .bd2hm-tooltipBox text{font-size:10px;fill:#fff}::ng-deep .bd2hm-tooltipBox rect{fill:#000;opacity:.8;filter:url(#bd2hm-shadow)}\n"], dependencies: [{ kind: "directive", type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i3.LabelsComponent, selector: "[bd2hm-labels]", inputs: ["graphic", "data", "alwaysOn"] }, { kind: "component", type: i4.TooltipComponent, selector: "[bd2hm-tooltip]", inputs: ["graphic", "boxMargin"] }, { kind: "component", type: i5.PaneBackComponent, selector: "[bd2hm-pane-back]", inputs: ["graphic", "margin"] }, { kind: "component", type: i6.SeriesBoxComponent, selector: "[bd2hm-series-box]", inputs: ["series", "graphic"] }, { kind: "component", type: i7.AxisBoxComponent, selector: "[bd2hm-axis-box]", inputs: ["graphic"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.12", ngImport: i0, type: Bd2NumHeatmapComponent, decorators: [{
            type: Component,
            args: [{ selector: 'bd2-num-heatmap', providers: [TooltipService], changeDetection: ChangeDetectionStrategy.OnPush, template: "<div class=\"bd2hm-heatmap\" [hidden]=\"hidden\">\r\n  <svg *ngIf=\"graphic\" width=\"100%\" [attr.viewBox]=\"graphic.viewBox\">\r\n    <defs>\r\n      <filter id=\"bd2hm-shadow\">\r\n        <feDropShadow dx=\"1\" dy=\"1\" stdDeviation=\"1\"/>\r\n      </filter>\r\n      <pattern id=\"bd2hm-pattern-diagonal\" width=\"10\" height=\"10\" patternTransform=\"rotate(45 0 0)\"\r\n               patternUnits=\"userSpaceOnUse\">\r\n        <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"10\" style=\"stroke:lightgrey; stroke-width:1\"/>\r\n      </pattern>\r\n    </defs>\r\n\r\n    <g class=\"bd2hm-mainPane\" [attr.transform]=\"graphic.mainPaneTransform\">\r\n\r\n      <g bd2hm-pane-back [graphic]=\"graphic\" class=\"bd2hm-paneBack\"></g>\r\n\r\n\r\n      <g bd2hm-axis-box [graphic]=\"graphic\"></g>\r\n\r\n\r\n\r\n      <g bd2hm-series-box [graphic]=\"graphic\" [series]=\"series\" class=\"bd2hm-seriesBox\"></g>\r\n\r\n\r\n      <g bd2hm-labels [graphic]=\"graphic\" [data]=\"series\" [alwaysOn]=\"labelsAlwaysOn\"></g>\r\n\r\n      <g bd2hm-tooltip [graphic]=\"graphic\"></g>\r\n    </g>\r\n  </svg>\r\n  <!--{{ series | json }}-->\r\n</div>\r\n", styles: ["::ng-deep .bd2hm-paneBack rect{fill:url(#bd2hm-pattern-diagonal)}::ng-deep .bd2hm-axisWrapper line{stroke:gray}::ng-deep .bd2hm-axisWrapper text{fill:gray;text-anchor:middle;font-size:9px}::ng-deep .bd2hm-labels text.bd2hm-onLabel{dominant-baseline:central;fill:#000;opacity:.6}::ng-deep .bd2hm-labels .bd2hm-hover text{dominant-baseline:central;fill:#fff;font-size:10px}::ng-deep .bd2hm-labels .bd2hm-hover rect{fill:#000;opacity:.8;filter:url(#bd2hm-shadow)}::ng-deep .bd2hm-tooltipBox text{font-size:10px;fill:#fff}::ng-deep .bd2hm-tooltipBox rect{fill:#000;opacity:.8;filter:url(#bd2hm-shadow)}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.TooltipService }]; }, propDecorators: { data: [{
                type: Input
            }], asymmetric: [{
                type: Input
            }], middleZero: [{
                type: Input
            }], hidden: [{
                type: Input
            }], labelsAlwaysOn: [{
                type: Input
            }], lookAndFeel: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmQyLW51bS1oZWF0bWFwLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2JkMi1uZ3gtaGVhdG1hcC9zcmMvbGliL2JkMi1udW0taGVhdG1hcC9iZDItbnVtLWhlYXRtYXAvYmQyLW51bS1oZWF0bWFwLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2JkMi1uZ3gtaGVhdG1hcC9zcmMvbGliL2JkMi1udW0taGVhdG1hcC9iZDItbnVtLWhlYXRtYXAvYmQyLW51bS1oZWF0bWFwLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyx1QkFBdUIsRUFBcUIsU0FBUyxFQUFFLEtBQUssRUFBOEMsTUFBTSxlQUFlLENBQUM7QUFDeEksT0FBTyxFQUEyQixpQkFBaUIsRUFBUSxNQUFNLHVCQUF1QixDQUFDO0FBQ3pGLE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSw2Q0FBNkMsQ0FBQztBQUMzRSxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFDckQsT0FBTyxFQUFDLGdCQUFnQixFQUFDLE1BQU0sMEJBQTBCLENBQUM7Ozs7Ozs7OztBQVMxRCxNQUFNLE9BQU8sc0JBQXNCO0lBMkJqQyxZQUFvQixjQUFpQyxFQUFVLE9BQXVCO1FBQWxFLG1CQUFjLEdBQWQsY0FBYyxDQUFtQjtRQUFVLFlBQU8sR0FBUCxPQUFPLENBQWdCO1FBbkJ0RixlQUFVLEdBQUcsS0FBSyxDQUFDO1FBR25CLGVBQVUsR0FBRyxLQUFLLENBQUM7UUFHbkIsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUdmLG1CQUFjLEdBQUcsSUFBSSxDQUFDO1FBR3RCLGdCQUFXLEdBQUcsSUFBSSxpQkFBaUIsRUFBRSxDQUFDO1FBSXRDLG9CQUFlLEdBQUcsSUFBSSxlQUFlLEVBQUUsQ0FBQztRQUN4QyxxQkFBZ0IsR0FBRyxJQUFJLGdCQUFnQixFQUFFLENBQUM7SUFHMUMsQ0FBQztJQUdELFFBQVE7UUFDTixnQ0FBZ0M7SUFDbEMsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDaEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUM1QjtJQUNILENBQUM7SUFFRCxXQUFXLENBQUMsT0FBc0I7UUFDaEMsSUFBSSxJQUFJLENBQUMsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUNyQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBQzdFLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLGdCQUFnQixDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsSUFBSSxDQUFDLFdBQVcsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDNUc7YUFBTTtZQUNMLElBQUksQ0FBQyxPQUFPLEdBQUcsU0FBUyxDQUFDO1lBQ3pCLElBQUksQ0FBQyxNQUFNLEdBQUcsU0FBUyxDQUFDO1NBQ3pCO0lBQ0gsQ0FBQzsrR0FqRFUsc0JBQXNCO21HQUF0QixzQkFBc0Isd01BSHRCLENBQUMsY0FBYyxDQUFDLCtDQ1Y3Qix1bkNBK0JBOzs0RkRsQmEsc0JBQXNCO2tCQVBsQyxTQUFTOytCQUNFLGlCQUFpQixhQUdoQixDQUFDLGNBQWMsQ0FBQyxtQkFDVix1QkFBdUIsQ0FBQyxNQUFNO3FJQU8vQyxJQUFJO3NCQURILEtBQUs7Z0JBSU4sVUFBVTtzQkFEVCxLQUFLO2dCQUlOLFVBQVU7c0JBRFQsS0FBSztnQkFJTixNQUFNO3NCQURMLEtBQUs7Z0JBSU4sY0FBYztzQkFEYixLQUFLO2dCQUlOLFdBQVc7c0JBRFYsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBTaW1wbGVDaGFuZ2VzfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHtCb3hTZXJpZSwgR3JhcGhpY0NvbnRleHQsIExvb2tBbmRGZWVsU2l6aW5nLCBTZXJpZX0gZnJvbSAnLi4vLi4vYmQyLWhlYXRtYXAuZG9tJztcclxuaW1wb3J0IHtUb29sdGlwU2VydmljZX0gZnJvbSAnLi4vLi4vcGxvdC1lbGVtZW50cy90b29sdGlwL3Rvb2x0aXAuc2VydmljZSc7XHJcbmltcG9ydCB7SGVhdG1hcERhdGFVdGlsfSBmcm9tICcuLi9oZWF0bWFwLWRhdGEtdXRpbCc7XHJcbmltcG9ydCB7SGVhdG1hcEdyYXBoVXRpbH0gZnJvbSAnLi4vLi4vaGVhdG1hcC1ncmFwaC11dGlsJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYmQyLW51bS1oZWF0bWFwJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vYmQyLW51bS1oZWF0bWFwLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9iZDItbnVtLWhlYXRtYXAuY29tcG9uZW50LmNzcyddLFxyXG4gIHByb3ZpZGVyczogW1Rvb2x0aXBTZXJ2aWNlXSxcclxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaFxyXG59KVxyXG5leHBvcnQgY2xhc3MgQmQyTnVtSGVhdG1hcENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMge1xyXG5cclxuICBzZXJpZXM6IEJveFNlcmllW107XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgZGF0YTogU2VyaWVbXTtcclxuXHJcbiAgQElucHV0KClcclxuICBhc3ltbWV0cmljID0gZmFsc2U7XHJcblxyXG4gIEBJbnB1dCgpXHJcbiAgbWlkZGxlWmVybyA9IGZhbHNlO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGhpZGRlbiA9IGZhbHNlO1xyXG5cclxuICBASW5wdXQoKVxyXG4gIGxhYmVsc0Fsd2F5c09uID0gdHJ1ZTtcclxuXHJcbiAgQElucHV0KClcclxuICBsb29rQW5kRmVlbCA9IG5ldyBMb29rQW5kRmVlbFNpemluZygpO1xyXG5cclxuICBncmFwaGljOiBHcmFwaGljQ29udGV4dDtcclxuXHJcbiAgaGVhdG1hcERhdGFVdGlsID0gbmV3IEhlYXRtYXBEYXRhVXRpbCgpO1xyXG4gIGhlYXRtYXBHcmFwaFV0aWwgPSBuZXcgSGVhdG1hcEdyYXBoVXRpbCgpO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGNoYW5nZURldGVjdG9yOiBDaGFuZ2VEZXRlY3RvclJlZiwgcHJpdmF0ZSB0b29sdGlwOiBUb29sdGlwU2VydmljZSkge1xyXG4gIH1cclxuXHJcblxyXG4gIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgLy8gdGhpcy5jaGFuZ2VEZXRlY3Rvci5kZXRhY2goKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgaWYgKHRoaXMudG9vbHRpcCkge1xyXG4gICAgICB0aGlzLnRvb2x0aXAubmdPbkRlc3Ryb3koKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLmRhdGEgJiYgdGhpcy5kYXRhLmxlbmd0aCA+IDApIHtcclxuICAgICAgdGhpcy5zZXJpZXMgPSB0aGlzLmhlYXRtYXBEYXRhVXRpbC5zZXJpZXNUb0JveGVzKHRoaXMuZGF0YSwgdGhpcy5hc3ltbWV0cmljKTtcclxuICAgICAgdGhpcy5ncmFwaGljID0gdGhpcy5oZWF0bWFwR3JhcGhVdGlsLnByZXBhcmVHcmFwaGljQ29udGV4dCh0aGlzLnNlcmllcywgdGhpcy5sb29rQW5kRmVlbCwgdGhpcy5taWRkbGVaZXJvKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuZ3JhcGhpYyA9IHVuZGVmaW5lZDtcclxuICAgICAgdGhpcy5zZXJpZXMgPSB1bmRlZmluZWQ7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcbn1cclxuIiwiPGRpdiBjbGFzcz1cImJkMmhtLWhlYXRtYXBcIiBbaGlkZGVuXT1cImhpZGRlblwiPlxyXG4gIDxzdmcgKm5nSWY9XCJncmFwaGljXCIgd2lkdGg9XCIxMDAlXCIgW2F0dHIudmlld0JveF09XCJncmFwaGljLnZpZXdCb3hcIj5cclxuICAgIDxkZWZzPlxyXG4gICAgICA8ZmlsdGVyIGlkPVwiYmQyaG0tc2hhZG93XCI+XHJcbiAgICAgICAgPGZlRHJvcFNoYWRvdyBkeD1cIjFcIiBkeT1cIjFcIiBzdGREZXZpYXRpb249XCIxXCIvPlxyXG4gICAgICA8L2ZpbHRlcj5cclxuICAgICAgPHBhdHRlcm4gaWQ9XCJiZDJobS1wYXR0ZXJuLWRpYWdvbmFsXCIgd2lkdGg9XCIxMFwiIGhlaWdodD1cIjEwXCIgcGF0dGVyblRyYW5zZm9ybT1cInJvdGF0ZSg0NSAwIDApXCJcclxuICAgICAgICAgICAgICAgcGF0dGVyblVuaXRzPVwidXNlclNwYWNlT25Vc2VcIj5cclxuICAgICAgICA8bGluZSB4MT1cIjBcIiB5MT1cIjBcIiB4Mj1cIjBcIiB5Mj1cIjEwXCIgc3R5bGU9XCJzdHJva2U6bGlnaHRncmV5OyBzdHJva2Utd2lkdGg6MVwiLz5cclxuICAgICAgPC9wYXR0ZXJuPlxyXG4gICAgPC9kZWZzPlxyXG5cclxuICAgIDxnIGNsYXNzPVwiYmQyaG0tbWFpblBhbmVcIiBbYXR0ci50cmFuc2Zvcm1dPVwiZ3JhcGhpYy5tYWluUGFuZVRyYW5zZm9ybVwiPlxyXG5cclxuICAgICAgPGcgYmQyaG0tcGFuZS1iYWNrIFtncmFwaGljXT1cImdyYXBoaWNcIiBjbGFzcz1cImJkMmhtLXBhbmVCYWNrXCI+PC9nPlxyXG5cclxuXHJcbiAgICAgIDxnIGJkMmhtLWF4aXMtYm94IFtncmFwaGljXT1cImdyYXBoaWNcIj48L2c+XHJcblxyXG5cclxuXHJcbiAgICAgIDxnIGJkMmhtLXNlcmllcy1ib3ggW2dyYXBoaWNdPVwiZ3JhcGhpY1wiIFtzZXJpZXNdPVwic2VyaWVzXCIgY2xhc3M9XCJiZDJobS1zZXJpZXNCb3hcIj48L2c+XHJcblxyXG5cclxuICAgICAgPGcgYmQyaG0tbGFiZWxzIFtncmFwaGljXT1cImdyYXBoaWNcIiBbZGF0YV09XCJzZXJpZXNcIiBbYWx3YXlzT25dPVwibGFiZWxzQWx3YXlzT25cIj48L2c+XHJcblxyXG4gICAgICA8ZyBiZDJobS10b29sdGlwIFtncmFwaGljXT1cImdyYXBoaWNcIj48L2c+XHJcbiAgICA8L2c+XHJcbiAgPC9zdmc+XHJcbiAgPCEtLXt7IHNlcmllcyB8IGpzb24gfX0tLT5cclxuPC9kaXY+XHJcbiJdfQ==