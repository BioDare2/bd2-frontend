import { ChangeDetectorRef, ElementRef, OnDestroy, OnInit } from '@angular/core';
import { TooltipService } from './tooltip.service';
import { Observable, Subscription } from 'rxjs';
import { GraphicContext, Point } from '../../bd2-heatmap.dom';
import * as i0 from "@angular/core";
export declare class TooltipComponent implements OnInit, OnDestroy {
    private tooltip;
    private changeDetector;
    graphic: GraphicContext;
    boxMargin: number;
    textNode: ElementRef<SVGGraphicsElement>;
    show: boolean;
    label: string;
    values: string;
    subscription: Subscription;
    position: string;
    ready: boolean;
    textBX: number;
    textBY: number;
    textBWidth: number;
    textBHeight: number;
    constructor(tooltip: TooltipService, changeDetector: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnDestroy(): void;
    handleRequest([show, label, point, location]: [boolean, string, Point, Point]): void;
    showTooltip(label: string, point: Point, location: Point): void;
    translateToDataLocation(location: Point, textBoxWidth: number, workspaceWidth: number): string;
    hideTooltip(point: Point, location: Point): void;
    formatValues(point: Point): string;
    updateTextBBox(): Observable<SVGRect>;
    setTextBBox(rect: SVGRect): void;
    textBBox(): SVGRect;
    formatLabel(label: string): string;
    static ɵfac: i0.ɵɵFactoryDeclaration<TooltipComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<TooltipComponent, "[bd2hm-tooltip]", never, { "graphic": { "alias": "graphic"; "required": false; }; "boxMargin": { "alias": "boxMargin"; "required": false; }; }, {}, never, never, false, never>;
}
