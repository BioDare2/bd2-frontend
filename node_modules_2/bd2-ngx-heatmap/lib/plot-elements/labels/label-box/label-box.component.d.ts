import { ChangeDetectorRef, ElementRef, OnChanges, OnInit, SimpleChanges } from '@angular/core';
import { Serie } from '../../../bd2-heatmap.dom';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class LabelBoxComponent implements OnInit, OnChanges {
    private changeDetector;
    serie: Serie;
    yStart: number;
    maxHeight: number;
    alwaysOn: boolean;
    color: string;
    margin: number;
    triggerY: number;
    triggerHeight: number;
    yMiddle: number;
    textNode: ElementRef<SVGGraphicsElement>;
    textBWidth: number;
    textBY: number;
    textBHeight: any;
    toggled: boolean;
    ready: boolean;
    constructor(changeDetector: ChangeDetectorRef);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    marginSize(): 2 | 1 | 4;
    fontSize(): number;
    toggleLabel(val?: boolean): void;
    updateTextBBox(): Observable<SVGRect>;
    setTextBBox(rect: SVGRect): void;
    textBBox(): SVGRect;
    static ɵfac: i0.ɵɵFactoryDeclaration<LabelBoxComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<LabelBoxComponent, "[bd2hm-label-box]", never, { "serie": { "alias": "serie"; "required": false; }; "yStart": { "alias": "yStart"; "required": false; }; "maxHeight": { "alias": "maxHeight"; "required": false; }; "alwaysOn": { "alias": "alwaysOn"; "required": false; }; "color": { "alias": "color"; "required": false; }; }, {}, never, never, false, never>;
}
