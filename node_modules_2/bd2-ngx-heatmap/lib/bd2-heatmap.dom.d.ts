import { ScaleBand, ScaleLinear, ScaleQuantize } from 'd3-scale';
export declare class LookAndFeelSizing {
    vMargin: number;
    hMargin: number;
    smallRowWidth: number;
    midRowWidth: number;
    bigRowWidth: number;
    rowGap: number;
}
export declare class GraphicContext {
    viewBox: string;
    mainPaneTransform: string;
    pWidth: number;
    pHeight: number;
    workspaceWidth: number;
    workspaceHeight: number;
    xDomain: [number, number];
    yDomain: any[];
    xScale: ScaleLinear<number, number>;
    yScale: ScaleBand<any>;
    colorScale: ScaleQuantize<string>;
    labelsColors: (n: number) => string;
    valuesFormatter: (n: number | {
        valueOf(): number;
    }) => string;
    domainFormatter: (n: number | {
        valueOf(): number;
    }) => string;
}
export type Serie = {
    key?: any;
    label?: string;
    data: Point[];
    min: number;
    max: number;
    mean: number;
};
export type Point = {
    x: number;
    y: number;
    width?: number;
};
export declare class Tick {
    x: number;
    y: number;
    label: any;
    top: boolean;
    left: boolean;
    constructor(x?: number, y?: number, label?: any, top?: boolean, left?: boolean);
}
export declare class BoxDef {
    x: number;
    y: number;
    left: number;
    right: number;
    width: number;
    constructor(x: number, y: number, left: number, right: number);
}
export declare class BoxSerie {
    key?: any;
    label?: string;
    data: BoxDef[];
    min: number;
    max: number;
    mean: number;
}
