{"version":3,"file":"bd2-ngx-polarplot.mjs","sources":["../../../projects/bd2-ngx-polarplot/src/lib/polar-plot-utils/polar-plot.dom.ts","../../../projects/bd2-ngx-polarplot/src/lib/polar-plot-utils/smart-rounding.ts","../../../projects/bd2-ngx-polarplot/src/lib/polar-plot-utils/polar-domain-util.ts","../../../projects/bd2-ngx-polarplot/src/lib/polar-plot-utils/color-palette.ts","../../../projects/bd2-ngx-polarplot/src/lib/polar-plot/polar-plot.dom.ts","../../../projects/bd2-ngx-polarplot/src/lib/polar-plot/polar-plot.component.ts","../../../projects/bd2-ngx-polarplot/src/lib/bd2-ngx-polarplot.module.ts","../../../projects/bd2-ngx-polarplot/src/public-api.ts","../../../projects/bd2-ngx-polarplot/src/bd2-ngx-polarplot.ts"],"sourcesContent":["\r\n\r\nexport class PolarPoint {\r\n  constructor(public xy: number[], public color: string, public hidden?: boolean) {}\r\n}\r\n\r\nexport class PetalNode {\r\n\r\n  peak: number;\r\n  roundedPeak: number;\r\n  width: number;\r\n  radiusScale: number;\r\n  polarAngle: number;\r\n  polarCoordinates: number[];\r\n  petalPath: number[][];\r\n\r\n  label: string;\r\n  color: string;\r\n  hidden: boolean;\r\n\r\n  individuals: PolarPoint[] = [];\r\n}\r\n\r\n","\r\nexport class SmartRounder {\r\n\r\n  static round(value: number, base?: number): number {\r\n\r\n    base = base || value;\r\n    base = Math.abs(base);\r\n\r\n    if (base < 0.01) {\r\n      return value;\r\n    }\r\n\r\n    if (base < 1) {\r\n      return Math.round(value * 10000) / 10000;\r\n    }\r\n\r\n    if (base < 1000) {\r\n      return Math.round(value * 100) / 100;\r\n    }\r\n    return Math.round(value);\r\n  }\r\n\r\n\r\n}\r\n","import {PetalNode, PolarPoint} from './polar-plot.dom';\r\nimport * as d3 from 'd3';\r\nimport {SmartRounder} from './smart-rounding';\r\n\r\n\r\nconst DEF_ERR = 0.6 / 24;\r\nconst DEF_WIDTH = 0.6 / 24;\r\nconst MIN_WIDTH = 0.1 / 24;\r\nconst NEGLIGIBLE_ERROR = 0.5 / 24;\r\nconst MAX_ERROR = 0.33; // 8/24\r\n\r\nexport class PolarDomainUtil {\r\n\r\n  dataToPetals(dataGroups: number[][], domain: number[],\r\n               scaleRadius?: boolean, scaleWidth?: boolean, errors?: number[]): PetalNode[] {\r\n\r\n    if (!dataGroups) {\r\n      return [];\r\n    }\r\n    domain[2] = domain[1] - domain[0];\r\n\r\n    return dataGroups.map((g, ix) => this.dataToPetal(g, domain, scaleRadius, scaleWidth, errors ? errors[ix] : null));\r\n  }\r\n\r\n  dataToPetal(data: number[], domain: number[],\r\n              scaleRadius?: boolean, scaleWidth?: boolean, error?: number): PetalNode {\r\n\r\n\r\n    const node = this.calculatePetalProperties(data, domain, scaleRadius, scaleWidth, error);\r\n    node.polarAngle = this.calculatePolarAngle(node.peak, domain);\r\n    node.petalPath = this.calculatePetalPath(node.peak, node.width, node.radiusScale, domain);\r\n    node.polarCoordinates = this.calculatePolarCoordinate(node.peak, domain);\r\n\r\n    // shift back after normalization\r\n    node.peak = node.peak + domain[0];\r\n\r\n    node.individuals = this.dataToPolarPoint(data, domain);\r\n    return node;\r\n  }\r\n\r\n  dataToPolarPoint(data: number[], domain: number[]): PolarPoint[] {\r\n\r\n    const ind = data.map(a => {\r\n      const v = new PolarPoint(this.calculatePolarCoordinate(a, domain), undefined);\r\n      return v;\r\n    });\r\n\r\n    return ind;\r\n  }\r\n\r\n  calculateCircularMeanAndDev(data: number[], domain: number[]) {\r\n\r\n    data = data.map(v => this.normalize(v, domain));\r\n    const m = d3.mean(data);\r\n    const std = d3.deviation(data) || 0;\r\n\r\n    const rot = domain[2] / 2;\r\n    data = data.map(v => v < rot ? v + domain[2] : v);\r\n    const rotM = d3.mean(data) % domain[2];\r\n    const rotStd = d3.deviation(data) || 0;\r\n\r\n    if (rotStd < std) {\r\n      return [rotM, rotStd];\r\n    } else {\r\n      return [m, std];\r\n    }\r\n  }\r\n\r\n  calculatePetalProperties(data: number[], domain: number[],\r\n                           scaleRadius?: boolean, scaleWidth?: boolean, error?: number): PetalNode {\r\n\r\n    const node = new PetalNode();\r\n\r\n    const meanStd = this.calculateCircularMeanAndDev(data, domain);\r\n\r\n    node.peak = meanStd[0];\r\n    node.roundedPeak = SmartRounder.round(node.peak);\r\n\r\n    if ((scaleRadius || scaleWidth) && !error) {\r\n      error = meanStd[1];\r\n    }\r\n\r\n\r\n    node.width = scaleWidth ? error : DEF_WIDTH * domain[2];\r\n    if (node.width < MIN_WIDTH * domain[2]) {\r\n      node.width = MIN_WIDTH * domain[2];\r\n    }\r\n    if (node.width > domain[2] / 2) {\r\n      node.width = domain[2] / 2;\r\n    }\r\n\r\n    node.radiusScale = 1;\r\n    if (scaleRadius) {\r\n      error = error / domain[2];\r\n      error = error <= NEGLIGIBLE_ERROR ? 0 : error;\r\n      error = error > MAX_ERROR ? MAX_ERROR : error;\r\n\r\n      node.radiusScale = 1 - 0.5 * error / MAX_ERROR;\r\n    }\r\n\r\n    return node;\r\n  }\r\n\r\n\r\n  calculatePetalPath(peak: number, width: number, radiusScale: number, domain: number[]): number[][] {\r\n\r\n    const path = [\r\n      [0, 0],\r\n      [0.5 * radiusScale, this.calculatePolarAngle(peak - width, domain)],\r\n      [1 * radiusScale, this.calculatePolarAngle(peak, domain)],\r\n      [0.5 * radiusScale, this.calculatePolarAngle(peak + width, domain)],\r\n    ];\r\n    return path;\r\n\r\n  }\r\n\r\n\r\n  normalize(value: number, domain: number[]): number {\r\n    value = value - domain[0];\r\n    value = value % domain[2];\r\n    if (value < 0) {\r\n      value += domain[2];\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  calculatePolarCoordinate(value: number, domain: number[]): number[] {\r\n    value = this.normalize(value, domain);\r\n\r\n    return this.normalizedPeakToPolar(value, domain[2]);\r\n  }\r\n\r\n  normalizedPeakToPolar(value: number, range: number): number[] {\r\n    return [\r\n      Math.cos(value * 2 * Math.PI / range - Math.PI / 2),\r\n      Math.sin(value * 2 * Math.PI / range - Math.PI / 2),\r\n      value\r\n    ];\r\n  }\r\n\r\n  calculatePolarAngle(value: number, domain: number[]): number {\r\n    value = this.normalize(value, domain);\r\n\r\n    return value * 2 * Math.PI / domain[2];\r\n  }\r\n}\r\n","\r\nexport class BD2ColorPalette {\r\n\r\n  static schemeCategory10 = [\r\n    '#1f77b4',\r\n    '#ff7f0e',\r\n    '#2ca02c',\r\n    '#d62728',\r\n    '#9467bd',\r\n    '#8c564b',\r\n    '#e377c2',\r\n    '#7f7f7f',\r\n    '#bcbd22',\r\n    '#17becf'\r\n  ];\r\n\r\n  static schemeCategory20 = [\r\n'#1f77b4'\r\n, '#aec7e8'\r\n, '#ff7f0e'\r\n, '#ffbb78'\r\n, '#2ca02c'\r\n, '#98df8a'\r\n, '#d62728'\r\n, '#ff9896'\r\n, '#9467bd'\r\n, '#c5b0d5'\r\n, '#8c564b'\r\n, '#c49c94'\r\n, '#e377c2'\r\n, '#f7b6d2'\r\n, '#7f7f7f'\r\n, '#c7c7c7'\r\n, '#bcbd22'\r\n, '#dbdb8d'\r\n, '#17becf'\r\n, '#9edae5'];\r\n\r\n  static extendPalette(palette: string[] | ReadonlyArray<string>, size: number): string[] {\r\n\r\n    if (!palette || palette.length === 0) {\r\n      palette = ['black'];\r\n    }\r\n\r\n    const out = [];\r\n    for (let i = 0; i < size; i++) {\r\n      out.push(palette[i % palette.length]);\r\n    }\r\n    return out;\r\n\r\n  }\r\n\r\n  static palette(size: number): string[] {\r\n\r\n    if (size <= BD2ColorPalette.schemeCategory10.length) {\r\n      return BD2ColorPalette.extendPalette(BD2ColorPalette.schemeCategory10, size);\r\n    } else {\r\n      return BD2ColorPalette.extendPalette(BD2ColorPalette.schemeCategory20, size);\r\n    }\r\n\r\n  }\r\n}\r\n","import {Selection} from 'd3-selection';\r\n\r\nexport type ShowIndividualsOptions = 'none' | 'all' | 'selected';\r\n\r\nexport class GraphicContext {\r\n\r\n  palette: string[];\r\n\r\n  mainPane: Selection<SVGGElement, any, null, undefined>;\r\n  axisGrid: Selection<SVGGElement, any, null, undefined>;\r\n  petalsWrapper: Selection<SVGGElement, any, null, undefined>;\r\n  dotsWrapper: Selection<SVGGElement, any, null, undefined>;\r\n  individualDotsInsetWrapper: Selection<SVGGElement, any, null, undefined>;\r\n  tooltip: Selection<SVGGElement, any, null, undefined>;\r\n  tooltipText: Selection<SVGGElement, any, null, undefined>;\r\n  tooltipBox: Selection<SVGGElement, any, null, undefined>;\r\n\r\n  legendtip: Selection<SVGGElement, any, null, undefined>;\r\n  legendtipText: Selection<SVGGElement, any, null, undefined>;\r\n  legendtipBox: Selection<SVGGElement, any, null, undefined>;\r\n\r\n  radius: number;\r\n}\r\n\r\nexport class LookAndFeel {\r\n  baseTransitionsTime = 400;\r\n\r\n  gridColor = '#CDCDCD';\r\n  axisColor = 'white';\r\n  axisWidth = '2px';\r\n\r\n  // done by css\r\n  // axisFontSize: \"10px\",\r\n  // tooltipFontSize: \"11px\",\r\n\r\n  dotsCircleRadius = 4;\r\n  dotsCircleStrokeWidth = '1px';\r\n  dotsCircleFillOpacity = 0.5;\r\n\r\n  petalAreaOpacity = 0.35;\r\n  petalAreaOpacityActive = 0.7;\r\n  petalLineWidth = '3px';\r\n  petalCircleRadius = 4;\r\n  petalCircleOpacity = 0.8;\r\n\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges\r\n} from '@angular/core';\r\n\r\nimport {Selection} from 'd3';\r\nimport * as d3 from 'd3';\r\nimport {PolarDomainUtil} from '../polar-plot-utils/polar-domain-util';\r\nimport {SmartRounder} from '../polar-plot-utils/smart-rounding';\r\nimport {PetalNode, PolarPoint} from '../polar-plot-utils/polar-plot.dom';\r\nimport {BD2ColorPalette} from '../polar-plot-utils/color-palette';\r\nimport {GraphicContext, LookAndFeel, ShowIndividualsOptions} from './polar-plot.dom';\r\n\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'bd2-ngx-polar-plot',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div class=\"polarplot\"></div>\r\n  `,\r\n  styles: [\r\n    `\r\n      :host ::ng-deep .axis .legend {\r\n        font-size: 15px;\r\n      }\r\n\r\n      :host ::ng-deep .tooltip {\r\n        font-size: 15px;\r\n      }\r\n\r\n      :host ::ng-deep .legendtip {\r\n        font-size: 18px;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class PolarPlotComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n\r\n\r\n  @Input()\r\n  data: number[][];\r\n\r\n\r\n  @Input()\r\n  errors: number[];\r\n\r\n  @Input()\r\n  removed: number[] = [];\r\n\r\n  @Input()\r\n  scaleRadius = true;\r\n\r\n  @Input()\r\n  scaleWidth = false;\r\n\r\n  @Input()\r\n  showIndividuals: ShowIndividualsOptions = 'selected';\r\n\r\n  @Input()\r\n  set domain(domain: [number, number]) {\r\n    this._domain = [domain[0], domain[1], domain[1] - domain[0]];\r\n  }\r\n\r\n  @Input()\r\n  palette: string[] = [];\r\n\r\n  @Input()\r\n  labels: string[] = [];\r\n\r\n  @Input()\r\n  labelsOn = true;\r\n\r\n\r\n  @Input()\r\n  lookAndFeel = new LookAndFeel();\r\n\r\n  @Output()\r\n  colors = new EventEmitter<string[]>();\r\n\r\n  private d3;\r\n  private parentNativeElement: any;\r\n  private polarUtil: PolarDomainUtil;\r\n  private d3Svg: Selection<SVGSVGElement, any, null, undefined>;\r\n\r\n\r\n  private _domain: number[];\r\n  private showAllIndividuals = false;\r\n  private showSelectedIndividuals = false;\r\n\r\n  //private individualPolarData: PolarPoint[][];\r\n\r\n  private graphicContext = new GraphicContext();\r\n\r\n\r\n  constructor(private ngZone: NgZone, private changeDetectorRef: ChangeDetectorRef, element: ElementRef) {\r\n    this.d3 = d3;\r\n    // this.d3 = d3Service.getD3();\r\n    this.parentNativeElement = element.nativeElement;\r\n    this.polarUtil = new PolarDomainUtil();\r\n\r\n  }\r\n\r\n\r\n  /**\r\n   * It is detached from angular to prevent unnecessary change detection\r\n   */\r\n  ngAfterViewInit() {\r\n    this.changeDetectorRef.detach();\r\n  }\r\n\r\n  /**\r\n   * Explicit triggers re-drawing as need to have all the parameters set (so will not redrawn if data came frist and domain later)\r\n   * @param changes\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n\r\n    if (!this.data || !this._domain) {\r\n      return;\r\n    }\r\n\r\n    // console.log(\"Changes\", changes);\r\n\r\n    this.showSelectedIndividuals = (this.showIndividuals === 'selected');\r\n\r\n    this.showAllIndividuals = (this.showIndividuals === 'all');\r\n\r\n    this.updatePlot();\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    if (this.parentNativeElement !== null) {\r\n\r\n    } else {\r\n      console.error('Missing parrent element for the component');\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.d3Svg && this.d3Svg.empty && !this.d3Svg.empty()) {\r\n      this.d3Svg.selectAll('*').remove();\r\n    }\r\n  }\r\n\r\n\r\n  initializeSvg(): GraphicContext {\r\n\r\n    const pWidth = 500;\r\n    const pHeight = 500;\r\n\r\n    const d3ParentElement = this.d3.select(this.parentNativeElement);\r\n    this.d3Svg = d3ParentElement.select('.polarplot').append('svg');\r\n\r\n\r\n    this.d3Svg.attr('width', '100%')\r\n      .attr('viewBox', '0 0 ' + pWidth + ' ' + pHeight);\r\n\r\n    const context = new GraphicContext();\r\n    context.mainPane = this.d3Svg.append<SVGGElement>('g')\r\n      .attr('transform', 'translate(' + (pWidth / 2) + ',' + (pHeight / 2) + ')'); // moves 0,0 of the pain to the middle of the graphics\r\n\r\n    context.radius = Math.min(pWidth, pHeight) / 2 - 30;\r\n    return context;\r\n  }\r\n\r\n  prepareLegendtip(context: GraphicContext): GraphicContext {\r\n\r\n    if (!context.legendtip) {\r\n      // Set up the small tooltip in the centre for when you hover over a circle\r\n      context.legendtip = context.mainPane.append<SVGGElement>('g')\r\n        .classed('legendtipWrapper', true) as any;\r\n\r\n      context.legendtipBox = context.legendtip.append<SVGGElement>('rect')\r\n        .style('fill', 'white')\r\n        .style('fill-opacity', 0.9)\r\n        .style('stroke', 'grey')\r\n      ;\r\n\r\n\r\n      context.legendtipText = context.legendtip.append('text')\r\n        .attr('class', 'legendtip')\r\n        .attr('text-anchor', 'middle')\r\n        // .attr(\"dy\", \"0.35em\")\r\n        // .style(\"font-size\", this.lookAndFeel.tooltipFontSize) //\"11px\")\r\n        .style('opacity', 1) as any\r\n      ;\r\n\r\n      context.legendtip\r\n      // .style(\"visibility\", \"hidden\");\r\n        .style('display', 'none');\r\n    }\r\n    return context;\r\n  }\r\n\r\n  showLegendtip(p: PetalNode, radius: number) {\r\n\r\n    if (!this.labelsOn) {\r\n      return;\r\n    }\r\n\r\n    this.graphicContext.legendtipText\r\n      .attr('x', 0)\r\n      .attr('y', 0)\r\n      .text(p.label)\r\n    // .transition().duration(this.lookAndFeel.baseTransitionsTime / 2)\r\n    // .style('opacity', 1);\r\n    ;\r\n\r\n    // it has to be before the box cause of the bug in firefox\r\n    this.graphicContext.legendtip\r\n      // .style(\"visibility\", \"visible\");\r\n      .style('display', null);\r\n\r\n    const bbox = this.graphicContext.legendtipText.node().getBBox();\r\n\r\n    this.graphicContext.legendtipBox\r\n      .attr('x', bbox.x - 3)\r\n      .attr('y', bbox.y - 2)\r\n      .attr('width', bbox.width + 6)\r\n      .attr('height', bbox.height + 4);\r\n\r\n\r\n  }\r\n\r\n  hideLegendtip() {\r\n\r\n    this.graphicContext.legendtip\r\n    // .style(\"visibility\", \"hidden\");\r\n      .style('display', 'none');\r\n  }\r\n\r\n\r\n  prepareTooltip(context: GraphicContext): GraphicContext {\r\n\r\n    if (!context.tooltip) {\r\n      // Set up the small tooltip for when you hover over a circle\r\n      context.tooltip = context.mainPane.append<SVGGElement>('g')\r\n        .classed('tooltipWrapper', true) as any;\r\n\r\n      context.tooltipBox = context.tooltip.append<SVGGElement>('rect')\r\n        .style('fill', 'white')\r\n        .style('fill-opacity', 0.8)\r\n        .style('stroke', 'grey')\r\n      // .style(\"visibility\", \"hidden\");\r\n      ;\r\n\r\n\r\n      context.tooltipText = context.tooltip.append('text')\r\n        .attr('class', 'tooltip')\r\n        .attr('text-anchor', 'middle')\r\n        .attr('dy', '0.35em')\r\n        // .style(\"font-size\", this.lookAndFeel.tooltipFontSize) //\"11px\")\r\n        .style('opacity', 1) as any\r\n      ;\r\n\r\n      context.tooltip\r\n      // .style(\"visibility\", \"hidden\");\r\n        .style('display', 'none');\r\n    }\r\n    return context;\r\n  }\r\n\r\n  showTooltip(p: PetalNode, radius: number) {\r\n\r\n\r\n    this.graphicContext.tooltipText\r\n      .attr('x', (radius + 15) * p.polarCoordinates[0])\r\n      .attr('y', (radius + 15) * p.polarCoordinates[1])\r\n      .text(p.roundedPeak)\r\n    // .transition().duration(this.lookAndFeel.baseTransitionsTime / 2)\r\n    // .style('opacity', 1);\r\n    ;\r\n\r\n    // it has to be before the get BBox cause of the firefox errors\r\n    this.graphicContext.tooltip\r\n      // .style(\"visibility\", \"visible\");\r\n      .style('display', null);\r\n\r\n    const bbox = this.graphicContext.tooltipText.node().getBBox();\r\n\r\n    this.graphicContext.tooltipBox\r\n      .attr('x', bbox.x - 3)\r\n      .attr('y', bbox.y - 2)\r\n      .attr('width', bbox.width + 6)\r\n      .attr('height', bbox.height + 4);\r\n\r\n\r\n  }\r\n\r\n  hideTooltip() {\r\n    // this.graphicContext.tooltip\r\n    // .transition().duration(this.lookAndFeel.baseTransitionsTime / 2)\r\n    // .style(\"opacity\", 0);\r\n\r\n    this.graphicContext.tooltip\r\n    // .style(\"visibility\", \"hidden\");\r\n      .style('display', 'none');\r\n  }\r\n\r\n\r\n  updatePlot() {\r\n\r\n    if (!this.d3Svg) {\r\n      this.graphicContext = this.initializeSvg();\r\n\r\n      this.graphicContext = this.plotAxisGrid(this.graphicContext);\r\n    }\r\n\r\n\r\n    // the grid is plotted only once, only the lables are updated\r\n    this.updateAxisLabels(this._domain, this.graphicContext.axisGrid);\r\n\r\n    this.graphicContext = this.updatePalette(this.data, this.palette, this.graphicContext);\r\n\r\n\r\n    const petalNodes = this.prepareDataModel(this.data, this._domain, this.scaleRadius, this.scaleWidth, this.errors,\r\n      this.labels, this.removed, this.graphicContext.palette);\r\n\r\n\r\n    //this.individualPolarData = this.prepareIndividualPolarData(this.data, this._domain, this.removed, this.graphicContext.palette);\r\n    //this.individualPolarData = this.individualPolarData.filter(d => d.length !== 0);\r\n\r\n    this.graphicContext = this.plotDataPetals(petalNodes, this.scaleRadius, this.scaleWidth, this.graphicContext);\r\n\r\n    this.graphicContext = this.plotAllDataDots(petalNodes, this.showAllIndividuals, this.graphicContext);\r\n\r\n    this.graphicContext = this.prepareIndividualDataInset(this.graphicContext);\r\n\r\n    this.graphicContext = this.prepareTooltip(this.graphicContext);\r\n    this.graphicContext = this.prepareLegendtip(this.graphicContext);\r\n\r\n  }\r\n\r\n  prepareDataModel(dataGroups: number[][], domain: number[],\r\n                   scaleRadius: boolean, scaleWidth: boolean, errors: number[],\r\n                   labels: string[], removed: number[],\r\n                   palette: string[]): PetalNode[] {\r\n\r\n    let petalNodes = this.polarUtil.dataToPetals(this.data, this._domain, this.scaleRadius, this.scaleWidth, this.errors);\r\n\r\n    this.labelPetals(petalNodes, labels);\r\n    this.colorPetals(petalNodes, palette);\r\n    // mark hidden\r\n    removed.forEach( ix => {\r\n      if (petalNodes[ix]) {\r\n        petalNodes[ix].hidden = true;\r\n        petalNodes[ix].individuals.forEach( p => p.hidden = true);\r\n      }\r\n    });\r\n    // petalNodes = petalNodes.filter(n => !n.hidden);\r\n\r\n    // remove empty data\r\n    petalNodes = petalNodes.filter(n => !isNaN(n.peak));\r\n    return petalNodes;\r\n  }\r\n\r\n  updatePalette(data: any[], palette: string[], context: GraphicContext): GraphicContext {\r\n    if (!palette || palette.length === 0) {\r\n      context.palette = BD2ColorPalette.palette(data.length);\r\n    } else {\r\n      context.palette = BD2ColorPalette.extendPalette(palette, data.length);\r\n\r\n    }\r\n    this.colors.next(context.palette.slice());\r\n    return context;\r\n  }\r\n\r\n  labelPetals(petals: PetalNode[], labels: string[]) {\r\n    if (!labels) {\r\n      labels = [];\r\n    }\r\n\r\n    petals.forEach((n, ix) => n.label = labels[ix] ? labels[ix] : '' + (ix + 1));\r\n  }\r\n\r\n  colorPetals(petals: PetalNode[], palette: string[]) {\r\n    petals.forEach((b, ix) => {\r\n      b.color = palette[ix];\r\n      b.individuals.forEach( p => p.color = b.color);\r\n    });\r\n  }\r\n\r\n  plotDataPetals(petalNodes: PetalNode[],\r\n                 scaleRadius: boolean, scaleWidth: boolean,\r\n                 context: GraphicContext): GraphicContext {\r\n\r\n    const transitionsTime = this.lookAndFeel.baseTransitionsTime;\r\n    const d3 = this.d3;\r\n    const radius = context.radius;\r\n\r\n    if (!context.petalsWrapper) {\r\n      context.petalsWrapper = context.mainPane.append<SVGGElement>('g').attr('class', 'petalsWrapper');\r\n    }\r\n\r\n    const petalsWrapper = context.petalsWrapper;\r\n\r\n    const petalLine = (p: PetalNode) => {\r\n\r\n      return d3.lineRadial()\r\n        .radius(function(d) {\r\n          return radius * d[0];\r\n        })\r\n        .angle(function(d) {\r\n          return d[1];\r\n        })\r\n        .curve(d3.curveCardinalClosed)(p.petalPath as any);\r\n    };\r\n\r\n    const instance = this;\r\n\r\n    // so that angular change detection is not triggered for mouseover/our events or transitions\r\n    this.ngZone.runOutsideAngular(() => {\r\n\r\n      const petals = petalsWrapper.selectAll('.petal')\r\n        .data(petalNodes);\r\n\r\n\r\n      const petalAreaOpacity = this.lookAndFeel.petalAreaOpacity;\r\n\r\n      petals\r\n        .select('.petalsArea')\r\n        .transition().duration(transitionsTime)\r\n        .attr('d', petalLine as any)\r\n        .style('fill', d => d.color)\r\n        .style('fill-opacity', this.lookAndFeel.petalAreaOpacity)\r\n        .on('interrupt', function(d: PetalNode) {\r\n          d3.select(this)\r\n            .attr('d', petalLine as any)\r\n            .style('fill', _ => d.color)\r\n            .style('fill-opacity', petalAreaOpacity);\r\n        })\r\n      ;\r\n\r\n      petals\r\n        .select('.petalsLine')\r\n        .transition().duration(transitionsTime)\r\n        .attr('d', petalLine as any)\r\n        .style('stroke', d => d.color)\r\n        .style('stroke-opacity', 1)\r\n        .style('stroke-width', this.lookAndFeel.petalLineWidth)\r\n        .on('interrupt', function( d: PetalNode) {\r\n          d3.select(this)\r\n            .attr('d', petalLine as any)\r\n            .style('stroke', _ => d.color)\r\n            .style('stroke-opacity', 1);\r\n        })\r\n      ;\r\n\r\n      petals\r\n        .select('.petalsCircle')\r\n        .transition().duration(transitionsTime)\r\n        .attr('cx', function(d: PetalNode, i) {\r\n          return radius * d.polarCoordinates[0]; // Math.cos(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n        })\r\n        .attr('cy', function(d: PetalNode, i) {\r\n          return radius * d.polarCoordinates[1]; // Math.sin(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n        })\r\n        .style('fill', d => d.color)\r\n        .on('interrupt', function(d: PetalNode) {\r\n          d3.select(this)\r\n            .attr('cx', function(_: PetalNode, i) {\r\n              return radius * d.polarCoordinates[0]; // Math.cos(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n            })\r\n            .attr('cy', function(_: PetalNode, i) {\r\n              return radius * d.polarCoordinates[1]; // Math.sin(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n            })\r\n            .style('fill', _ => d.color);\r\n        })\r\n      ;\r\n\r\n      const newPetals = petals\r\n        .enter()\r\n        .append<SVGGElement>('g')\r\n        .attr('class', 'petal');\r\n\r\n\r\n      const petalsArea = newPetals.append('path');\r\n\r\n      petalsArea\r\n        .attr('class', 'petalsArea')\r\n        .attr('d', petalLine as any)\r\n        .style('fill', d => d.color)\r\n        .style('fill-opacity', 0)\r\n        .on('mouseover', function(evt: MouseEvent, d: PetalNode) {\r\n\r\n          d3.select(this)\r\n            .transition().duration(transitionsTime)\r\n            .style('fill-opacity', instance.lookAndFeel.petalAreaOpacityActive);\r\n\r\n          instance.showTooltip(d, radius);\r\n          instance.showLegendtip(d, radius);\r\n\r\n          /*const e = petalsArea.nodes();\r\n          console.log(\"Nodes\",e);\r\n          console.log(\"T\", this);\r\n          console.log(\"S\",d3.select(this));\r\n          const ix = e.indexOf(this);\r\n          */\r\n\r\n          instance.showIndividualDataInset(d, radius);\r\n\r\n        })\r\n        .on('mouseout', function() {\r\n\r\n          d3.select(this)\r\n            .transition().duration(transitionsTime)\r\n            .style('fill-opacity', instance.lookAndFeel.petalAreaOpacity);\r\n\r\n          instance.hideTooltip();\r\n          instance.hideLegendtip();\r\n          instance.hideIndividualDataInset();\r\n\r\n        })\r\n        .transition().duration(transitionsTime)\r\n        .style('fill-opacity', this.lookAndFeel.petalAreaOpacity)\r\n      ;\r\n\r\n      newPetals\r\n        .append('path')\r\n        .style('stroke-opacity', 0)\r\n        .transition().duration(transitionsTime)\r\n        .attr('class', 'petalsLine')\r\n        .attr('d', petalLine as any)\r\n        .style('stroke-width', this.lookAndFeel.petalLineWidth)\r\n        .style('stroke', d => d.color)\r\n        .style('fill', 'none')\r\n        .style('stroke-opacity', 1)\r\n      ;\r\n      // .style(\"filter\" , \"url(#glow)\");\r\n\r\n      // Append the circles\r\n      newPetals\r\n        .append('circle')\r\n        .attr('class', 'petalsCircle')\r\n        .attr('cx', function(d: PetalNode, i) {\r\n          return radius * d.polarCoordinates[0]; // Math.cos(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n        })\r\n        .attr('cy', function(d: PetalNode, i) {\r\n          return radius * d.polarCoordinates[1]; // Math.sin(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n        })\r\n        .attr('r', this.lookAndFeel.petalCircleRadius)\r\n        .style('fill', d => d.color)\r\n        .style('fill-opacity', this.lookAndFeel.petalCircleOpacity);\r\n\r\n      petals.exit()\r\n        // .transition().duration(transitionsTime / 2)\r\n        // .style('opacity', 0.0)\r\n        .remove();\r\n\r\n      const petalsAll: Selection<SVGGElement, PetalNode, null, undefined> = petalsWrapper.selectAll('.petal')\r\n        // .style(\"visibility\", (n:PetalNode) => n.hidden ? \"hidden\":\"visible\");\r\n        .style('display', (n: PetalNode) => n.hidden ? 'none' : null) as any;\r\n\r\n    });\r\n\r\n    return context;\r\n  }\r\n\r\n  /*\r\n  prepareIndividualPolarData(dataGroups: number[][], domain: number[],\r\n                             removed: number[], palette: string[]): PolarPoint[][] {\r\n    // append group index to the data so the colors can be generated for each data point (ix is for the parrent so it would\r\n    // not be available\r\n    const ind = dataGroups.map((g, ix) => g.map(a => {\r\n      const v = new PolarPoint(this.polarUtil.calculatePolarCoordinate(a, domain), palette[ix]);\r\n      return v;\r\n    }));\r\n    removed.forEach (ix => {\r\n      if (ind[ix]) {\r\n        ind[ix].forEach(p => p.hidden = true);\r\n      }\r\n    });\r\n    return ind;\r\n  }*/\r\n\r\n  prepareIndividualDataInset(context: GraphicContext): GraphicContext {\r\n\r\n    if (!context.individualDotsInsetWrapper) {\r\n      context.individualDotsInsetWrapper = context.mainPane.append<SVGGElement>('g').attr('class', 'dotsInset');\r\n    }\r\n\r\n    // the actual plotting happens in showIndividuals as it is data depended\r\n\r\n    // we always hide it with new data first;\r\n    this.hideIndividualDataInset();\r\n    return context;\r\n  }\r\n\r\n  hideIndividualDataInset() {\r\n    if (!this.graphicContext.individualDotsInsetWrapper) {\r\n      return;\r\n    }\r\n\r\n    this.graphicContext.individualDotsInsetWrapper\r\n      .style('opacity', 0.0);\r\n  }\r\n\r\n  showIndividualDataInset(p: PetalNode, radius: number) {\r\n\r\n    if (!this.graphicContext.individualDotsInsetWrapper || !p.individuals || !this.showSelectedIndividuals) {\r\n      return;\r\n    }\r\n\r\n    // console.log(\"P: \"+p.polarCoordinates[0], p.polarCoordinates);\r\n\r\n    const transitionsTime = this.lookAndFeel.baseTransitionsTime / 2;\r\n\r\n    const d3 = this.d3;\r\n\r\n    // console.log(\"Ix\",ix);\r\n    // console.log(\"D\",this.individualPolarData[ix]);\r\n    const individuals = p.individuals; // this.individualPolarData[ix];\r\n\r\n\r\n    const dots = this.graphicContext.individualDotsInsetWrapper.selectAll('.dotsCircle')\r\n      .data(individuals);\r\n\r\n    // existing dots\r\n    dots\r\n      .interrupt()\r\n      .style('opacity', 0.2)\r\n      .attr('cx', radius * p.polarCoordinates[0])\r\n      .attr('cy', radius * p.polarCoordinates[1])\r\n      .style('stroke', p.color)\r\n      .style('fill', p.color)\r\n      .transition().duration(transitionsTime)\r\n      .style('opacity', 1)\r\n      .attr('cx', d => radius * d.xy[0])\r\n      .attr('cy', d => radius * d.xy[1]) // Math.sin(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n    ;\r\n\r\n    // new dots\r\n    dots.enter()\r\n      .append('circle')\r\n      .style('opacity', 0.2)\r\n      .attr('class', 'dotsCircle')\r\n      .attr('cx', radius * p.polarCoordinates[0])\r\n      .attr('cy', radius * p.polarCoordinates[1])\r\n      .attr('r', this.lookAndFeel.dotsCircleRadius)\r\n      .style('stroke-width', this.lookAndFeel.dotsCircleStrokeWidth)\r\n      .style('stroke', p.color)\r\n      .style('fill', p.color)\r\n      .style('fill-opacity', this.lookAndFeel.dotsCircleFillOpacity)\r\n      .transition().duration(transitionsTime)\r\n      .style('opacity', 1)\r\n      .attr('cx', d => radius * d.xy[0])\r\n      .attr('cy', d => radius * d.xy[1]) // Math.sin(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n    ;\r\n    // exit\r\n    dots.exit()\r\n      .remove();\r\n\r\n    this.graphicContext.individualDotsInsetWrapper\r\n      .style('opacity', 1);\r\n  }\r\n\r\n  plotAllDataDots(petals: PetalNode[], showDots: boolean,\r\n                  context: GraphicContext): GraphicContext {\r\n\r\n\r\n    const transitionsTime = this.lookAndFeel.baseTransitionsTime;\r\n    const d3 = this.d3;\r\n    const radius = context.radius;\r\n\r\n    if (!context.dotsWrapper) {\r\n      context.dotsWrapper = context.mainPane.append<SVGGElement>('g').attr('class', 'dotsWrapper');\r\n    }\r\n    const dotsWrapper = context.dotsWrapper;\r\n\r\n    if (!showDots) {\r\n      context.dotsWrapper.style('opacity', 0.0);\r\n      return context;\r\n    } else {\r\n      context.dotsWrapper.style('opacity', 1);\r\n    }\r\n\r\n    const dotsData = petals.map(p => p.individuals);\r\n    const instance = this;\r\n\r\n\r\n    // so that angular change detection is not triggered for mouseover/our events or transitions\r\n    this.ngZone.runOutsideAngular(() => {\r\n\r\n      const dotsGroup = dotsWrapper.selectAll('.dotsGroup')\r\n        .data(dotsData);\r\n\r\n\r\n      const dotsInExisting = dotsGroup.selectAll('.dotsCircle')\r\n        .data(d => d);\r\n\r\n      dotsInExisting\r\n        .transition().duration(transitionsTime)\r\n        .attr('cx', d => radius * d.xy[0])\r\n        .attr('cy', d => radius * d.xy[1]) // Math.sin(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n        .style('stroke', d => d.color)\r\n        .style('fill', d => d.color)\r\n      ;\r\n\r\n      dotsInExisting.enter()\r\n        .append('circle')\r\n        .attr('class', 'dotsCircle')\r\n        .transition().duration(transitionsTime)\r\n        .attr('cx', d => radius * d.xy[0])\r\n        .attr('cy', d => radius * d.xy[1]) // Math.sin(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n        .attr('r', this.lookAndFeel.dotsCircleRadius)\r\n        .style('stroke-width', this.lookAndFeel.dotsCircleStrokeWidth)\r\n        .style('stroke', d => d.color)\r\n        .style('fill', d => d.color)\r\n        .style('fill-opacity', this.lookAndFeel.dotsCircleFillOpacity);\r\n\r\n\r\n      dotsInExisting.exit()\r\n        .transition().duration(transitionsTime / 2)\r\n        .style('opacity', 0.0)\r\n        .remove();\r\n\r\n      // dotsGroup enter section\r\n      const dotsInNewGroups = dotsGroup.enter()\r\n        .append<SVGGElement>('g')\r\n        .attr('class', 'dotsGroup')\r\n        .selectAll('.dotsCircle')\r\n        .data(d => d);\r\n\r\n\r\n      dotsInNewGroups.enter()\r\n        .append('circle')\r\n        .attr('class', 'dotsCircle')\r\n        .transition().duration(transitionsTime)\r\n        .attr('cx', d => radius * d.xy[0])\r\n        .attr('cy', d => radius * d.xy[1]) // Math.sin(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n        .attr('r', this.lookAndFeel.dotsCircleRadius)\r\n        .style('stroke-width', this.lookAndFeel.dotsCircleStrokeWidth)\r\n        .style('stroke', d => d.color)\r\n        .style('fill', d => d.color)\r\n        .style('fill-opacity', this.lookAndFeel.dotsCircleFillOpacity);\r\n\r\n      // dotsGroup exit section\r\n      dotsGroup.exit()\r\n        .transition().duration(transitionsTime / 2)\r\n        .style('opacity', 0.0)\r\n        .remove();\r\n\r\n    });\r\n\r\n    const dotsGroup = dotsWrapper// .selectAll(\".dotsGroup\")\r\n      .selectAll('.dotsCircle')\r\n      // .style(\"visibility\", (n:PolarPoint) => n.hidden ? \"hidden\":\"visible\");\r\n      .style('display', (n: PolarPoint) => n.hidden ? 'none' : null);\r\n\r\n    return context;\r\n  }\r\n\r\n  /*\r\n  plotAllDataDots(dotsData: PolarPoint[][], showDots: boolean,\r\n                  context: GraphicContext): GraphicContext {\r\n\r\n\r\n    const transitionsTime = this.lookAndFeel.baseTransitionsTime;\r\n    const d3 = this.d3;\r\n    const radius = context.radius;\r\n\r\n    if (!context.dotsWrapper) {\r\n      context.dotsWrapper = context.mainPane.append<SVGGElement>('g').attr('class', 'dotsWrapper');\r\n    }\r\n    const dotsWrapper = context.dotsWrapper;\r\n\r\n    if (!showDots) {\r\n      context.dotsWrapper.style('opacity', 0.0);\r\n      return context;\r\n    } else {\r\n      context.dotsWrapper.style('opacity', 1);\r\n    }\r\n\r\n    const instance = this;\r\n\r\n\r\n    // so that angular change detection is not triggered for mouseover/our events or transitions\r\n    this.ngZone.runOutsideAngular(() => {\r\n\r\n      const dotsGroup = dotsWrapper.selectAll('.dotsGroup')\r\n        .data(dotsData);\r\n\r\n\r\n      const dotsInExisting = dotsGroup.selectAll('.dotsCircle')\r\n        .data(d => d);\r\n\r\n      dotsInExisting\r\n        .transition().duration(transitionsTime)\r\n        .attr('cx', d => radius * d.xy[0])\r\n        .attr('cy', d => radius * d.xy[1]) // Math.sin(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n        .style('stroke', d => d.color)\r\n        .style('fill', d => d.color)\r\n      ;\r\n\r\n      dotsInExisting.enter()\r\n        .append('circle')\r\n        .attr('class', 'dotsCircle')\r\n        .transition().duration(transitionsTime)\r\n        .attr('cx', d => radius * d.xy[0])\r\n        .attr('cy', d => radius * d.xy[1]) // Math.sin(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n        .attr('r', this.lookAndFeel.dotsCircleRadius)\r\n        .style('stroke-width', this.lookAndFeel.dotsCircleStrokeWidth)\r\n        .style('stroke', d => d.color)\r\n        .style('fill', d => d.color)\r\n        .style('fill-opacity', this.lookAndFeel.dotsCircleFillOpacity);\r\n\r\n\r\n      dotsInExisting.exit()\r\n        .transition().duration(transitionsTime / 2)\r\n        .style('opacity', 0.0)\r\n        .remove();\r\n\r\n      // dotsGroup enter section\r\n      const dotsInNewGroups = dotsGroup.enter()\r\n        .append<SVGGElement>('g')\r\n        .attr('class', 'dotsGroup')\r\n        .selectAll('.dotsCircle')\r\n        .data(d => d);\r\n\r\n\r\n      dotsInNewGroups.enter()\r\n        .append('circle')\r\n        .attr('class', 'dotsCircle')\r\n        .transition().duration(transitionsTime)\r\n        .attr('cx', d => radius * d.xy[0])\r\n        .attr('cy', d => radius * d.xy[1]) // Math.sin(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n        .attr('r', this.lookAndFeel.dotsCircleRadius)\r\n        .style('stroke-width', this.lookAndFeel.dotsCircleStrokeWidth)\r\n        .style('stroke', d => d.color)\r\n        .style('fill', d => d.color)\r\n        .style('fill-opacity', this.lookAndFeel.dotsCircleFillOpacity);\r\n\r\n      // dotsGroup exit section\r\n      dotsGroup.exit()\r\n        .transition().duration(transitionsTime / 2)\r\n        .style('opacity', 0.0)\r\n        .remove();\r\n\r\n    });\r\n\r\n    const dotsGroup = dotsWrapper// .selectAll(\".dotsGroup\")\r\n      .selectAll('.dotsCircle')\r\n      // .style(\"visibility\", (n:PolarPoint) => n.hidden ? \"hidden\":\"visible\");\r\n      .style('display', (n: PolarPoint) => n.hidden ? 'none' : null);\r\n\r\n    return context;\r\n  }\r\n  */\r\n\r\n  plotAxisGrid(context: GraphicContext): GraphicContext {\r\n\r\n\r\n    if (context.axisGrid) {\r\n      return context; // this.axisGrid; //we only plot grid once\r\n    }\r\n\r\n    const radius = context.radius;\r\n    const axisGrid = context.axisGrid = context.mainPane.append<SVGGElement>('g').attr('class', 'axisWrapper');\r\n\r\n\r\n    axisGrid.selectAll('.levels')\r\n      .data([10, 2, 1])\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'gridCircle')\r\n      .attr('r', function(d, i) {\r\n        return radius / d;\r\n      })\r\n      .style('fill', this.lookAndFeel.gridColor)\r\n      .style('stroke', this.lookAndFeel.gridColor)\r\n      .style('fill-opacity', 0.15);\r\n    // .style(\"filter\" , \"url(#glow)\");\r\n\r\n    const axis = axisGrid.selectAll('.axis')\r\n      .data(\r\n        [0, 3, 6, 9, 12, 15, 18, 21].map(v => this.polarUtil.normalizedPeakToPolar(v, 24)\r\n          // polar coordinates with attached original value for the label\r\n        )\r\n      )\r\n      .enter()\r\n      .append('g')\r\n      .attr('class', 'axis');\r\n\r\n    axis.append('line')\r\n      .attr('x1', 0)\r\n      .attr('y1', 0)\r\n      .attr('x2', function(d, i) {\r\n        return radius * d[0]; // Math.cos(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n      })\r\n      .attr('y2', function(d, i) {\r\n        return radius * d[1]; // Math.sin(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n      })\r\n      .attr('class', 'line')\r\n      .style('stroke', this.lookAndFeel.axisColor)\r\n      .style('stroke-dasharray', '5 5')\r\n      .style('stroke-width', this.lookAndFeel.axisWidth);\r\n\r\n    axis.append('text')\r\n      .attr('class', 'legend')\r\n      // .style(\"font-size\", this.lookAndFeel.axisFontSize) //\"10px\")\r\n      .attr('text-anchor', 'middle')\r\n      .attr('dy', '0.35em')\r\n      .attr('x', function(d, i) {\r\n        return (radius + 15) * d[0]; // Math.cos(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n      })\r\n      .attr('y', function(d, i) {\r\n        return (radius + 15) * d[1]; // Math.sin(d * 2 * Math.PI / 24 - Math.PI / 2);\r\n      })\r\n      .text(function(d, i) {\r\n        return d[2];\r\n      });\r\n\r\n    return context;\r\n  }\r\n\r\n  updateAxisLabels(domain: number[], axisGrid: Selection<SVGGElement, any, null, undefined>) {\r\n\r\n    const range = domain[1] - domain[0];\r\n    const axis = axisGrid.selectAll('.axis');\r\n    axis.select('text')\r\n      .text(function(d, i) {\r\n        if (i === 0) {\r\n          return SmartRounder.round(domain[1]) + ' / ' + SmartRounder.round(domain[0]);\r\n        } else {\r\n          return SmartRounder.round(domain[0] + d[2] / 24 * range);\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {PolarPlotComponent} from './polar-plot/polar-plot.component';\r\nimport {CommonModule} from '@angular/common';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [PolarPlotComponent],\r\n  imports: [\r\n    // CommonModule\r\n  ],\r\n  exports: [PolarPlotComponent]\r\n})\r\nexport class BD2NgxPolarplotModule { }\r\n","/*\r\n * Public API Surface of bd2-ngx-polarplot\r\n */\r\n\r\nexport * from './lib/bd2-ngx-polarplot.module';\r\nexport * from './lib/polar-plot/polar-plot.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}